import dynamic from 'next/dynamic';
import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/App.module.css';
import ReactLogo from './logo.svg';
import { createContext } from 'react';

const inter = Inter({ subsets: ['latin'] });

const loadContext = createContext(null);

// This approach gets closer to the desired behavior, but the Angular app is not mounted because when mount() is called, the <app-root> is not yet loaded.
const AngularEmbeddedComponent = dynamic(
  () =>
    import('angularEmbedded/angularModule')
      .then((m) => {
        m.mount();
        return m;
      })
      .then(() => () => (
        <div>
          <app-root></app-root>
        </div>
      )),
  { ssr: false },
);

// Webpack cannot compile with this approach
// function AngularEmbeddedComponent() {
//   useEffect(() => {
//     import('angularEmbedded/angularModule').then((m) => {
//       m.mount();
//     });
//   }, []);

//   return (
//     <div>
//       <app-root></app-root>
//     </div>
//   );
// }

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.App}>
        <div className={styles.main}>
          <h1>Main Application in</h1>
          <Image src={ReactLogo} alt="" className={styles.logo} />
        </div>
        <div className={styles.content}>
          <AngularEmbeddedComponent></AngularEmbeddedComponent>
        </div>
      </div>
    </>
  );
}
